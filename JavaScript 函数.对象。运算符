JavaScript 数据类型
Undefined 和 Null
Undefined 这个值表示变量不含有值。
可以通过将变量的值设置为 null 来清空变量。
<!DOCTYPE html>
<html>
<body>
<script>
var person;
var car="Volvo";
document.write(person + "<br />");//undefined
document.write(car + "<br />");//Volvo
var car=null
document.write(car + "<br />");//null
</script>
</body>
</html>
声明变量类型
当您声明新变量时，可以使用关键词 "new" 来声明其类型：
var carname=new String;
var x=      new Number;
var y=      new Boolean;
var cars=   new Array;
var person= new Object;
JavaScript 变量均为对象。当您声明一个变量时，就创建了一个新的对象。

<!DOCTYPE html>
<html>
<body>
<script>
person=new Object();
person.firstname="Bill";
person.lastname="Gates";
person.age=56;
person.eyecolor="blue";
document.write(person.firstname + " is " + person.age + " years old.");//Bill is 56 years old.多变量输出方法
</script>
</body>
</html>

访问对象的方法
您可以通过下面的语法调用方法：
objectName.methodName()
这个例子使用 String 对象的 toUpperCase() 方法来把文本转换为大写：

var message="Hello world!";
var x=message.toUpperCase();
在以上代码执行后，x 的值是：
HELLO WORLD!
您知道吗？
提示：在面向对象的语言中，使用 camel-case 标记法的函数是很常见的。您会经常看到 someMethod() 这样的函数名，而不是 some_method()。

function myFunction()
{
var x=5;
return x;
}
var myVar=myFunction();
myVar 变量的值是 5，也就是函数 "myFunction()" 所返回的值。
<!DOCTYPE html>
<html>
<body>
<p>本例调用的函数会执行一个计算，然后返回结果：</p>
<p id="demo"></p>
<script>
function myFunction(a,b)
{
return a*b;
}
document.getElementById("demo").innerHTML=myFunction(4,3);//本例调用的函数会执行一个计算，然后返回结果：12
</script>
</body>
</html>



JavaScript 运算符
给定 y=5，下面的表格解释了这些算术运算符：
运算符	描述	例子	结果
+	加	x=y+2	x=7
-	减	x=y-2	x=3
*	乘	x=y*2	x=10
/	除	x=y/2	x=2.5
%	求余数 (保留整数)	x=y%2	x=1
++	累加	x=++y	x=6
--	递减	x=--y	x=4

用于字符串的 + 运算符
+ 运算符用于把文本值或字符串变量加起来（连接起来）。
如需把两个或多个字符串变量连接起来，请使用 + 运算符。
txt1="What a very";
txt2="nice day";
txt3=txt1+txt2;
在以上语句执行后，变量 txt3 包含的值是 "What a verynice day"。
或者把空格插入表达式中：
txt1="What a very";
txt2="nice day";
txt3=txt1+" "+txt2;

如果把数字与字符串相加，结果将成为字符串。
<html>
<body>
<script type="text/javascript">
x=5+5;
document.write(x);//10
document.write("<br />");
x="5"+"5";
document.write(x);//55
document.write("<br />");
x=5+"5";
document.write(x);//55
document.write("<br />");
x="5"+5;
document.write(x);//55
document.write("<br />");
</script>
<h3>规则是：</h3>
<p><strong>如果把数字与字符串相加，结果将成为字符串。</strong></p>
</body>
</html>
